@page "/non-visa/add"
@attribute [Authorize(Policy = "AdminsOnly")]
@rendermode InteractiveServer
@using BlackListWebApp.Data.Models
@using BlackListWebApp.Interfaces
@using Microsoft.AspNetCore.Authorization
@inject INonVisaService NonVisaService
@inject NavigationManager NavigationManager

<PageTitle>Record Visa Violation - BlackList Management</PageTitle>

<div class="fade-in">
    <div class="container">
        <!-- Standardized Page Header -->
        <div class="page-header mb-4">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h1 class="page-title">
                        <i class="fas fa-exclamation-triangle me-3"></i>
                        Record Visa Violation
                    </h1>
                    <p class="page-subtitle">Record passengers who arrived without valid visa documentation</p>
                </div>
                <div>
                    <button @onclick='() => NavigationManager.NavigateTo("/non-visa/list")' class="btn btn-outline-danger">
                        <i class="fas fa-list me-2"></i>
                        View Violations
                    </button>
                </div>
            </div>
        </div>

        <!-- Status Message for Errors -->
        @if (!string.IsNullOrEmpty(statusMessage))
        {
            <div class="alert @statusClass alert-dismissible fade show" role="alert">
                <i class="fas @statusIcon me-2"></i>
                @statusMessage
                <button type="button" class="btn-close" @onclick='() => statusMessage = ""' aria-label="Close"></button>
            </div>
        }

        <!-- Add Passenger Form -->
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="card slide-up">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <i class="fas fa-file-alt me-2"></i>
                            Visa Violation Report
                        </h5>
                    </div>
                    <div class="card-body">
                        <EditForm Model="newPassenger" OnValidSubmit="HandleValidSubmit">
                            <DataAnnotationsValidator />

                            <h6 class="text-muted mb-3">Passenger Information</h6>
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label class="form-label fw-semibold">First Name *</label>
                                    <InputText class="form-control" @bind-Value="newPassenger.FirstName" placeholder="Enter first name" />
                                    <ValidationMessage For="@(() => newPassenger.FirstName)" class="text-danger small" />
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label class="form-label fw-semibold">Last Name *</label>
                                    <InputText class="form-control" @bind-Value="newPassenger.LastName" placeholder="Enter last name" />
                                    <ValidationMessage For="@(() => newPassenger.LastName)" class="text-danger small" />
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label class="form-label fw-semibold">Nationality</label>
                                    <InputText class="form-control" @bind-Value="newPassenger.Nationality" placeholder="Enter nationality" />
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label class="form-label fw-semibold">Passport Number</label>
                                    <InputText class="form-control" @bind-Value="newPassenger.PassportNumber" placeholder="Enter passport number" />
                                </div>
                            </div>

                            <!-- ADDED PNR and Mobile Fields -->
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label class="form-label fw-semibold">PNR (Booking Reference)</label>
                                    <InputText class="form-control" @bind-Value="newPassenger.PNR" placeholder="e.g., R8T3Y1" />
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label class="form-label fw-semibold">Mobile</label>
                                    <InputText class="form-control" @bind-Value="newPassenger.Mobile" placeholder="Enter mobile number" />
                                </div>
                            </div>

                            <hr class="my-4" />
                            <h6 class="text-muted mb-3">Violation Details</h6>
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label class="form-label fw-semibold">Flight Number</label>
                                    <InputText class="form-control" @bind-Value="newPassenger.FlightNumber" placeholder="e.g., GF123" />
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label class="form-label fw-semibold">Arrival Date *</label>
                                    <InputDate class="form-control" @bind-Value="newPassenger.ArrivalDate" />
                                    <ValidationMessage For="@(() => newPassenger.ArrivalDate)" class="text-danger small" />
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label class="form-label fw-semibold">Airport Station *</label>
                                    <InputSelect class="form-select" @bind-Value="newPassenger.AirportStation">
                                        <option value="">Select airport station...</option>
                                        <option value="BAH Terminal 1">BAH Terminal 1</option>
                                        <option value="BAH Terminal 2">BAH Terminal 2</option>
                                        <option value="DXB Terminal 1">DXB Terminal 1</option>
                                        <option value="DXB Terminal 3">DXB Terminal 3</option>
                                        <option value="DOH Terminal 1">DOH Terminal 1</option>
                                        <option value="KWI Terminal 1">KWI Terminal 1</option>
                                    </InputSelect>
                                    <ValidationMessage For="@(() => newPassenger.AirportStation)" class="text-danger small" />
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label class="form-label fw-semibold">Violation Type *</label>
                                    <InputSelect class="form-select" @bind-Value="newPassenger.ViolationType">
                                        <option value="">Select violation type...</option>
                                        <option value="No Visa">No Visa</option>
                                        <option value="Expired Visa">Expired Visa</option>
                                        <option value="Invalid Visa">Invalid Visa</option>
                                        <option value="Wrong Visa Type">Wrong Visa Type</option>
                                        <option value="Fake Visa">Fake Visa</option>
                                    </InputSelect>
                                    <ValidationMessage For="@(() => newPassenger.ViolationType)" class="text-danger small" />
                                </div>
                            </div>

                            <!-- ADDED Status Field -->
                            @* <div class="mb-3">
                                <label class="form-label fw-semibold">Status *</label>
                                <InputSelect class="form-select" @bind-Value="newPassenger.Status">
                                    <option value="Pending Review">Pending Review</option>
                                    <option value="Deported">Deported</option>
                                    <option value="Fine Issued">Fine Issued</option>
                                    <option value="Resolved">Resolved</option>
                                </InputSelect>
                                <ValidationMessage For="@(() => newPassenger.Status)" class="text-danger small" />
                            </div> *@

                            <div class="mb-3">
                                <label class="form-label fw-semibold">Intended Purpose of Visit</label>
                                <InputSelect class="form-select" @bind-Value="newPassenger.Purpose">
                                    <option value="">Select intended purpose...</option>
                                    <option value="Business">Business</option>
                                    <option value="Tourism">Tourism</option>
                                    <option value="Transit">Transit</option>
                                    <option value="Visit">Visit Family/Friends</option>
                                    <option value="Medical">Medical Treatment</option>
                                    <option value="Work">Work/Employment</option>
                                    <option value="Study">Study/Education</option>
                                    <option value="Other">Other</option>
                                </InputSelect>
                            </div>

                            <div class="mb-4">
                                <label class="form-label fw-semibold">Violation Details & Actions Taken</label>
                                <InputTextArea class="form-control" rows="4" @bind-Value="newPassenger.Remarks"
                                               placeholder="Describe the circumstances of the violation, actions taken by immigration officers, and any additional relevant information..." />
                            </div>

                            <div class="d-flex justify-content-between">
                                <button type="button" @onclick='() => NavigationManager.NavigateTo("/non-visa/list")' class="btn btn-secondary">
                                    <i class="fas fa-arrow-left me-2"></i>
                                    Back to List
                                </button>
                                <button type="submit" class="btn btn-danger" disabled="@isSubmitting">
                                    @if (isSubmitting)
                                    {
                                        <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                                        <span>Recording...</span>
                                    }
                                    else
                                    {
                                        <i class="fas fa-exclamation-triangle me-2"></i>
                                        <span>Record Violation</span>
                                    }
                                </button>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private NonVisaPassenger newPassenger = new()
    {
        ArrivalDate = DateTime.Today.ToUniversalTime(),
        Status = "Pending Review" // Set a default status
    };

    private bool isSubmitting = false;
    private string statusMessage = string.Empty;
    private string statusClass = string.Empty;
    private string statusIcon = string.Empty;

    private async Task HandleValidSubmit()
    {
        isSubmitting = true;
        statusMessage = string.Empty;

        try
        {
            await NonVisaService.AddPassengerAsync(newPassenger);
            NavigationManager.NavigateTo("/non-visa/list");
        }
        catch (Exception ex)
        {
            ShowStatusMessage($"Error recording violation: A database error occurred. Please try again.", "alert-danger", "fa-times-circle");
            // For debugging: Console.WriteLine(ex.Message);
        }
        finally
        {
            isSubmitting = false;
        }
    }

    private void ShowStatusMessage(string message, string cssClass, string icon)
    {
        statusMessage = message;
        statusClass = cssClass;
        statusIcon = icon;
        StateHasChanged();
    }
}